/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.almacen.vistas;

import javax.swing.JOptionPane;
import com.almacen.logic.TipoFichaBL;
import com.almacen.entity.TipoFicha;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import recursos.OptionValues;

/**
 *
 * @author JorgePC
 */
public class frmTipoFicha extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmTipoFicha
     */
    private List<TipoFicha> listaTipoFicha;
    private int categoriaID;

    public frmTipoFicha() {
        initComponents();
        listarAll();
        
        manageButtons(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTipoFicha = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTipoFicha = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Mantenedor Tipo Ficha");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));
        jPanel1.setToolTipText("");

        jLabel1.setText("Descripcion:");

        txtTipoFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoFichaActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Elimiinar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTipoFicha))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTipoFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbTipoFicha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbTipoFichaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbTipoFicha);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (!isEmpty()) {

            TipoFicha objTipoFicha = new TipoFicha();
            objTipoFicha.setIdTipoFicha(0);
            objTipoFicha.setDescripcion(txtTipoFicha.getText());
            OptionValues mode= OptionValues.INSERT;
            int result = TipoFichaBL.getInstance().insert(mode.getValue(), objTipoFicha);
            if (result > 0) {
                listarAll();
                JOptionPane.showMessageDialog(null, "Se registro correctamente el tipo ficha.", null, JOptionPane.INFORMATION_MESSAGE);
                clearControls();
            } else {
                JOptionPane.showMessageDialog(null, "El tipo ficha ya existe .", null, JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!isEmpty()) {
            int rpta = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el registro?",
                    "ELIMINAR", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (rpta == JOptionPane.YES_OPTION) {
                TipoFicha objTipoFicha = new TipoFicha();
                objTipoFicha.setIdTipoFicha(categoriaID);
                OptionValues mode=OptionValues.DELETE;
                boolean result = TipoFichaBL.getInstance().delete(mode.getValue(), objTipoFicha);
                if (result) {
                    listarAll();
                    JOptionPane.showMessageDialog(null, "Se elimino correctamente el tipo ficha.", null, JOptionPane.INFORMATION_MESSAGE);
                    clearControls();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el tipo ficha.", null, JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtTipoFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoFichaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoFichaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if (!isEmpty()) {
            int rpta = JOptionPane.showConfirmDialog(null, "¿Desea editar el registro?",
                    "EDITAR", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (rpta == JOptionPane.YES_OPTION) {

                TipoFicha objTipoFicha = new TipoFicha();
                objTipoFicha.setIdTipoFicha(categoriaID);
                objTipoFicha.setDescripcion(txtTipoFicha.getText());
                OptionValues mode= OptionValues.UPDATE;

                boolean result = TipoFichaBL.getInstance().update(mode.getValue(), objTipoFicha);
                if (result) {
                    listarAll();
                    JOptionPane.showMessageDialog(null, "Se Edito correctamente el tipo ficha.", null, JOptionPane.INFORMATION_MESSAGE);
                    clearControls();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al editar el tipo ficha.", null, JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        manageButtons(1);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        clearControls();
        manageButtons(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jtbTipoFichaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTipoFichaMouseClicked
        int i = jtbTipoFicha.getSelectedRow();
        if (i != -1) {
            manageButtons(2);
            TipoFicha objTipoFicha = new TipoFicha();
            objTipoFicha = listaTipoFicha.get(i);

            categoriaID = objTipoFicha.getIdTipoFicha();
            txtTipoFicha.setText((String) jtbTipoFicha.getValueAt(i, 0));
        }

    }//GEN-LAST:event_jtbTipoFichaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbTipoFicha;
    private javax.swing.JTextField txtTipoFicha;
    // End of variables declaration//GEN-END:variables

    private void listarAll() {
        listaTipoFicha = TipoFichaBL.getInstance().listAll();

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("ESTADO");
        for (TipoFicha categoria : listaTipoFicha) {
            modelo.addRow(new Object[]{
                categoria.getDescripcion(),
                categoria.isEstado() == true ? "Activo" : "Inactivo"
            });
        }
        jtbTipoFicha.setModel(modelo);
    }

    private void manageButtons(int caso) {
        switch (caso) {
            //al iniciar el formulario
            case 0:
                btnNuevo.setEnabled(true);
                btnGuardar.setEnabled(false);
                btnEditar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnCancelar.setEnabled(false);
                disableControls();
                break;
            //boton nuevo presionado  
            case 1:
                btnNuevo.setEnabled(false);
                btnGuardar.setEnabled(true);
                btnEditar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnCancelar.setEnabled(true);
                enableControls();
                break;
            //cuando selecciona una fila del jtable
            case 2:
                btnNuevo.setEnabled(false);
                btnGuardar.setEnabled(false);
                btnEditar.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnCancelar.setEnabled(true);
                enableControls();
                break;

        }

    }

    private void disableControls() {
        txtTipoFicha.setEnabled(false);
    }

    private void enableControls() {
        txtTipoFicha.setEnabled(true);
    }

    private void clearControls() {
        txtTipoFicha.setText("");
        categoriaID=0;
    }

    private boolean isEmpty() {
        if (txtTipoFicha.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Llenar campos vacios.", "ALERTA", JOptionPane.WARNING_MESSAGE);
            return true;
        } else {
            return false;
        }
    }
}
